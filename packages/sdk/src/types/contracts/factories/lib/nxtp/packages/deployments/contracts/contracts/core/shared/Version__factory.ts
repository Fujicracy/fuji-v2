/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  Version,
  VersionInterface,
  VersionMulticall,
} from "../../../../../../../../../lib/nxtp/packages/deployments/contracts/contracts/core/shared/Version";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
export class Version__factory {
  static readonly abi = _abi;
  static createInterface(): VersionInterface {
    return new utils.Interface(_abi) as VersionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Version {
    return new Contract(address, _abi, signerOrProvider) as Version;
  }
  static multicall(address: string): VersionMulticall {
    return new MulticallContract(address, _abi) as unknown as VersionMulticall;
  }
}
