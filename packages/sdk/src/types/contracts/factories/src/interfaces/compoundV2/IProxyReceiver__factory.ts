/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  IProxyReceiver,
  IProxyReceiverInterface,
  IProxyReceiverMulticall,
} from "../../../../src/interfaces/compoundV2/IProxyReceiver";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "contract ICToken",
        name: "cToken",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
export class IProxyReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): IProxyReceiverInterface {
    return new utils.Interface(_abi) as IProxyReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IProxyReceiver {
    return new Contract(address, _abi, signerOrProvider) as IProxyReceiver;
  }
  static multicall(address: string): IProxyReceiverMulticall {
    return new MulticallContract(
      address,
      _abi
    ) as unknown as IProxyReceiverMulticall;
  }
}
