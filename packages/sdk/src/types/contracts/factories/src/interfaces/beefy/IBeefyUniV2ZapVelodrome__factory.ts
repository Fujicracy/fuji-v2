/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  IBeefyUniV2ZapVelodrome,
  IBeefyUniV2ZapVelodromeInterface,
  IBeefyUniV2ZapVelodromeMulticall,
} from "../../../../src/interfaces/beefy/IBeefyUniV2ZapVelodrome";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "beefyVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmountOutMin",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenInAmount",
        type: "uint256",
      },
    ],
    name: "beefIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beefyVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "withdrawAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "desiredToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "desiredTokenOutMin",
        type: "uint256",
      },
    ],
    name: "beefOutAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beefyVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "fullInvestmentIn",
        type: "uint256",
      },
    ],
    name: "estimateSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "swapAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapAmountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "swapTokenOut",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
export class IBeefyUniV2ZapVelodrome__factory {
  static readonly abi = _abi;
  static createInterface(): IBeefyUniV2ZapVelodromeInterface {
    return new utils.Interface(_abi) as IBeefyUniV2ZapVelodromeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IBeefyUniV2ZapVelodrome {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IBeefyUniV2ZapVelodrome;
  }
  static multicall(address: string): IBeefyUniV2ZapVelodromeMulticall {
    return new MulticallContract(
      address,
      _abi
    ) as unknown as IBeefyUniV2ZapVelodromeMulticall;
  }
}
