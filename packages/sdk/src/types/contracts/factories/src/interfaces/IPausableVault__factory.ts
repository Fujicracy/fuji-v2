/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  IPausableVault,
  IPausableVaultInterface,
  IPausableVaultMulticall,
} from "../../../src/interfaces/IPausableVault";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IPausableVault.VaultActions",
        name: "actions",
        type: "uint8",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "PausedForceAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IPausableVault.VaultActions",
        name: "actions",
        type: "uint8",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "UnpausedForceAll",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum IPausableVault.VaultActions",
        name: "action",
        type: "uint8",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pauseForceAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPausableVault.VaultActions",
        name: "action",
        type: "uint8",
      },
    ],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPausableVault.VaultActions",
        name: "action",
        type: "uint8",
      },
    ],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpauseForceAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
export class IPausableVault__factory {
  static readonly abi = _abi;
  static createInterface(): IPausableVaultInterface {
    return new utils.Interface(_abi) as IPausableVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPausableVault {
    return new Contract(address, _abi, signerOrProvider) as IPausableVault;
  }
  static multicall(address: string): IPausableVaultMulticall {
    return new MulticallContract(
      address,
      _abi
    ) as unknown as IPausableVaultMulticall;
  }
}
