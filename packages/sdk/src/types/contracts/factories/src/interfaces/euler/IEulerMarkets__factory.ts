/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  IEulerMarkets,
  IEulerMarketsInterface,
  IEulerMarketsMulticall,
} from "../../../../src/interfaces/euler/IEulerMarkets";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "activateMarket",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dToken",
        type: "address",
      },
    ],
    name: "dTokenToUnderlying",
    outputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "eToken",
        type: "address",
      },
    ],
    name: "eTokenToDToken",
    outputs: [
      {
        internalType: "address",
        name: "dTokenAddr",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "eToken",
        type: "address",
      },
    ],
    name: "eTokenToUnderlying",
    outputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subAccountId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "newMarket",
        type: "address",
      },
    ],
    name: "enterMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "interestRate",
    outputs: [
      {
        internalType: "int96",
        name: "",
        type: "int96",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "underlyingToDToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying",
        type: "address",
      },
    ],
    name: "underlyingToEToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
export class IEulerMarkets__factory {
  static readonly abi = _abi;
  static createInterface(): IEulerMarketsInterface {
    return new utils.Interface(_abi) as IEulerMarketsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IEulerMarkets {
    return new Contract(address, _abi, signerOrProvider) as IEulerMarkets;
  }
  static multicall(address: string): IEulerMarketsMulticall {
    return new MulticallContract(
      address,
      _abi
    ) as unknown as IEulerMarketsMulticall;
  }
}
