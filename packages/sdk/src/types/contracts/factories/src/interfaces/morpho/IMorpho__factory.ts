/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  IMorpho,
  IMorphoInterface,
  IMorphoMulticall,
} from "../../../../src/interfaces/morpho/IMorpho";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_onBehalf",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_onBehalf",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "supply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_poolTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
export class IMorpho__factory {
  static readonly abi = _abi;
  static createInterface(): IMorphoInterface {
    return new utils.Interface(_abi) as IMorphoInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMorpho {
    return new Contract(address, _abi, signerOrProvider) as IMorpho;
  }
  static multicall(address: string): IMorphoMulticall {
    return new MulticallContract(address, _abi) as unknown as IMorphoMulticall;
  }
}
