/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  AddrMapper,
  AddrMapperInterface,
  AddrMapperMulticall,
} from "../../../src/helpers/AddrMapper";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "chief",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "SystemAccessControl__hasRole_missingRole",
    type: "error",
  },
  {
    inputs: [],
    name: "SystemAccessControl__onlyTimelock_callerIsNotTimelock",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "keyAddress",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "mappedAddress",
        type: "address",
      },
    ],
    name: "MappingChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "HARVESTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REBALANCER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNPAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "chief",
    outputs: [
      {
        internalType: "contract IChief",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "providerName",
        type: "string",
      },
      {
        internalType: "address",
        name: "inputAddr",
        type: "address",
      },
    ],
    name: "getAddressMapping",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "providerName",
        type: "string",
      },
      {
        internalType: "address",
        name: "inputAddr1",
        type: "address",
      },
      {
        internalType: "address",
        name: "inputAddr2",
        type: "address",
      },
    ],
    name: "getAddressNestedMapping",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProviders",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "providerName",
        type: "string",
      },
      {
        internalType: "address",
        name: "keyAddr",
        type: "address",
      },
      {
        internalType: "address",
        name: "returnedAddr",
        type: "address",
      },
    ],
    name: "setMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "providerName",
        type: "string",
      },
      {
        internalType: "address",
        name: "keyAddr1",
        type: "address",
      },
      {
        internalType: "address",
        name: "keyAddr2",
        type: "address",
      },
      {
        internalType: "address",
        name: "returnedAddr",
        type: "address",
      },
    ],
    name: "setNestedMapping",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];
export class AddrMapper__factory {
  static readonly abi = _abi;
  static createInterface(): AddrMapperInterface {
    return new utils.Interface(_abi) as AddrMapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddrMapper {
    return new Contract(address, _abi, signerOrProvider) as AddrMapper;
  }
  static multicall(address: string): AddrMapperMulticall {
    return new MulticallContract(
      address,
      _abi
    ) as unknown as AddrMapperMulticall;
  }
}
