/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  LibConnextBundler,
  LibConnextBundlerInterface,
  LibConnextBundlerMulticall,
} from "../../../src/libraries/LibConnextBundler";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "destDomain",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum IRouter.Action[]",
        name: "innerActions",
        type: "IRouter.Action[]",
      },
      {
        internalType: "bytes[]",
        name: "innerArgs",
        type: "bytes[]",
      },
    ],
    name: "bridgeWithCall",
    outputs: [
      {
        internalType: "enum IRouter.Action[]",
        name: "",
        type: "IRouter.Action[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "router",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "borrowAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "depositAndBorrow",
    outputs: [
      {
        internalType: "enum IRouter.Action[]",
        name: "",
        type: "IRouter.Action[]",
      },
      {
        internalType: "bytes[]",
        name: "",
        type: "bytes[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
export class LibConnextBundler__factory {
  static readonly abi = _abi;
  static createInterface(): LibConnextBundlerInterface {
    return new utils.Interface(_abi) as LibConnextBundlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibConnextBundler {
    return new Contract(address, _abi, signerOrProvider) as LibConnextBundler;
  }
  static multicall(address: string): LibConnextBundlerMulticall {
    return new MulticallContract(
      address,
      _abi
    ) as unknown as LibConnextBundlerMulticall;
  }
}
