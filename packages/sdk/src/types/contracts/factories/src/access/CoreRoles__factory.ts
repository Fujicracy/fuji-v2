/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";
import type {
  CoreRoles,
  CoreRolesInterface,
  CoreRolesMulticall,
} from "../../../src/access/CoreRoles";
import { Contract as MulticallContract } from "@hovoh/ethcall";
const _abi = [
  {
    inputs: [],
    name: "HARVESTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LIQUIDATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REBALANCER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNPAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
export class CoreRoles__factory {
  static readonly abi = _abi;
  static createInterface(): CoreRolesInterface {
    return new utils.Interface(_abi) as CoreRolesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoreRoles {
    return new Contract(address, _abi, signerOrProvider) as CoreRoles;
  }
  static multicall(address: string): CoreRolesMulticall {
    return new MulticallContract(
      address,
      _abi
    ) as unknown as CoreRolesMulticall;
  }
}
