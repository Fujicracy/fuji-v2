[
  "error AssetLogic__getTokenIndexFromStableSwapPool_notExist()",
  "error AssetLogic__handleIncomingAsset_ethWithErcTransfer()",
  "error AssetLogic__handleIncomingAsset_notAmount()",
  "error AssetLogic__transferAssetFromContract_notNative()",
  "error AssetLogic__transferAssetToContract_feeOnTransferNotSupported()",
  "error BaseConnextFacet__nonReentrant_reentrantCall()",
  "error BaseConnextFacet__onlyOwner_notOwner()",
  "error BaseConnextFacet__onlyProposed_notProposedOwner()",
  "error BaseConnextFacet__onlyRemoteRouter_notRemoteRouter()",
  "error BaseConnextFacet__onlyReplica_notReplica()",
  "error BaseConnextFacet__whenNotPaused_paused()",
  "error BridgeFacet__bumpTransfer_valueIsZero()",
  "error BridgeFacet__executePortalTransfer_insufficientAmountWithdrawn()",
  "error BridgeFacet__execute_alreadyExecuted()",
  "error BridgeFacet__execute_alreadyReconciled()",
  "error BridgeFacet__execute_invalidRouterSignature()",
  "error BridgeFacet__execute_maxRoutersExceeded()",
  "error BridgeFacet__execute_notApprovedForPortals()",
  "error BridgeFacet__execute_notReconciled()",
  "error BridgeFacet__execute_notSupportedRouter()",
  "error BridgeFacet__execute_unapprovedSender()",
  "error BridgeFacet__execute_wrongDomain()",
  "error BridgeFacet__forceReceiveLocal_invalidSender()",
  "error BridgeFacet__handleExecuteTransaction_invalidSponsoredAmount()",
  "error BridgeFacet__setExecutor_invalidExecutor()",
  "error BridgeFacet__setPromiseRouter_invalidPromiseRouter()",
  "error BridgeFacet__setSponsorVault_invalidSponsorVault()",
  "error BridgeFacet__xcall_callbackNotAContract()",
  "error BridgeFacet__xcall_emptyTo()",
  "error BridgeFacet__xcall_nonZeroCallbackFeeForCallback()",
  "error BridgeFacet__xcall_notSupportedAsset()",
  "error BridgeFacet__xcall_wrongDomain()",
  "event AavePortalMintUnbacked(bytes32 indexed,address indexed,address,uint256)",
  "event Executed(bytes32 indexed,address indexed,tuple(tuple(address,bytes,uint32,uint32,address,address,bool,bool,address,uint256,uint256,uint256),address,address[],bytes[],uint256,uint256,address),address,uint256,address)",
  "event ExecutorUpdated(address,address,address)",
  "event ForcedReceiveLocal(bytes32 indexed,bytes32 indexed,uint32,uint256)",
  "event PromiseRouterUpdated(address,address,address)",
  "event SponsorVaultUpdated(address,address,address)",
  "event TransferRelayerFeesUpdated(bytes32 indexed,uint256,address)",
  "event XCalled(bytes32 indexed,tuple(tuple(address,bytes,uint32,uint32,address,address,bool,bool,address,uint256,uint256,uint256),address,uint256),tuple(address,uint256,uint256,address),uint256,bytes,address)",
  "function AAVE_REFERRAL_CODE() view returns (uint16)",
  "function bumpTransfer(bytes32) payable",
  "function domain() view returns (uint32)",
  "function execute(tuple(tuple(address,bytes,uint32,uint32,address,address,bool,bool,address,uint256,uint256,uint256),address,address[],bytes[],uint256,uint256,address)) returns (bytes32)",
  "function executor() view returns (address)",
  "function forceReceiveLocal(tuple(address,bytes,uint32,uint32,address,address,bool,bool,address,uint256,uint256,uint256),uint256,uint256,bytes32,uint32,address)",
  "function nonce() view returns (uint256)",
  "function promiseRouter() view returns (address)",
  "function reconciledTransfers(bytes32) view returns (bool)",
  "function relayerFees(bytes32) view returns (uint256)",
  "function routedTransfers(bytes32) view returns (address[])",
  "function setExecutor(address)",
  "function setPromiseRouter(address)",
  "function setSponsorVault(address)",
  "function sponsorVault() view returns (address)",
  "function xcall(tuple(tuple(address,bytes,uint32,uint32,address,address,bool,bool,address,uint256,uint256,uint256),address,uint256)) payable returns (bytes32)"
]
